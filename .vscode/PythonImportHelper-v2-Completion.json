[
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STATIC",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STATIC",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_ATTRIBUTES",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_DIR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "UP",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DOWN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LEFT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RIGHT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR_MAP",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DASH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_POS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "location",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_POS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_POS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_POS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "IN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STATIC",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_PATHS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED_HEX",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE_HEX",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE_HEX",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_PATHS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED_HEX",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_DIR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "HORIZONTAL",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "IN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "OUT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "VERTICAL",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STATIC",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "UP",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DOWN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LEFT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RIGHT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "location",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STAFF",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ORIENTATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "IN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LETTER_SVG_DIR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_ORIENTATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_ORIENTATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "IN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LAYER",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ORIENTATION",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_DIR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "UP",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LEFT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DOWN",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RIGHT",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LETTER_SVG_DIR",
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "isExtraImport": true,
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "StaticArrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "StaticArrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "isExtraImport": true,
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Union",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Union",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Literal",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Literal",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Literal",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Any",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Literal",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Set",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Literal",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Any",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "IO",
    "importPath": "typing",
    "description": "typing",
    "isExtraImport": true,
    "detail": "typing",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Staff",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Club",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Fan",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Hoop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Buugeng",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Triad",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Staff",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Staff",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Staff",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Club",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Buugeng",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Fan",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Triad",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Hoop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Prop",
    "importPath": "objects.props",
    "description": "objects.props",
    "isExtraImport": true,
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ArrowAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Turns",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Direction",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "StartEndLocationTuple",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationAngle",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Optional",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Turns",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Orientation",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Orientation",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationAngle",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Axis",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Dict",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ColorHex",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ColorHex",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterDictionary",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Letters",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "GammaEndingLetters",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterGroupsByMotionType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Letters",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionTypeCombinations",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionTypeLetterGroupMap",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Position",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PreprocessedStartEndCombinations",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "SpecificPosition",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "SpecificStartEndPositionsDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "StartEndLocationTuple",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ArrowAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionType",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Turns",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationAngle",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributes",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationsDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ArrowAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterDictionary",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationEntries",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationsDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Direction",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "List",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Optional",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Orientation",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Tuple",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "TYPE_CHECKING",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "*",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterDictionary",
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "isExtraImport": true,
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSvgItem",
    "importPath": "PyQt6.QtSvgWidgets",
    "description": "PyQt6.QtSvgWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvgWidgets",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QObject",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QRect",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QRectF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPoint",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPoint",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPoint",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QPointF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QSize",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QRectF",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "Qt",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QEvent",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QRect",
    "importPath": "PyQt6.QtCore",
    "description": "PyQt6.QtCore",
    "isExtraImport": true,
    "detail": "PyQt6.QtCore",
    "documentation": {}
  },
  {
    "label": "QTransform",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QImage",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPainter",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPalette",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QColor",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QGuiApplication",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QColor",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPen",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPainter",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QTransform",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QTransform",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QAction",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPainter",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QTransform",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QFont",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QColor",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPalette",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QKeyEvent",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPainter",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QFont",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QColor",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPalette",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QIcon",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPixmap",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QColor",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QImage",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QPainter",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QResizeEvent",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "QScreen",
    "importPath": "PyQt6.QtGui",
    "description": "PyQt6.QtGui",
    "isExtraImport": true,
    "detail": "PyQt6.QtGui",
    "documentation": {}
  },
  {
    "label": "start_end_location_mapping",
    "importPath": "data.start_end_location_mapping",
    "description": "data.start_end_location_mapping",
    "isExtraImport": true,
    "detail": "data.start_end_location_mapping",
    "documentation": {}
  },
  {
    "label": "GraphicalObject",
    "importPath": "objects.graphical_object",
    "description": "objects.graphical_object",
    "isExtraImport": true,
    "detail": "objects.graphical_object",
    "documentation": {}
  },
  {
    "label": "GraphicalObject",
    "importPath": "objects.graphical_object",
    "description": "objects.graphical_object",
    "isExtraImport": true,
    "detail": "objects.graphical_object",
    "documentation": {}
  },
  {
    "label": "Motion",
    "importPath": "objects.motion",
    "description": "objects.motion",
    "isExtraImport": true,
    "detail": "objects.motion",
    "documentation": {}
  },
  {
    "label": "Motion",
    "importPath": "objects.motion",
    "description": "objects.motion",
    "isExtraImport": true,
    "detail": "objects.motion",
    "documentation": {}
  },
  {
    "label": "Motion",
    "importPath": "objects.motion",
    "description": "objects.motion",
    "isExtraImport": true,
    "detail": "objects.motion",
    "documentation": {}
  },
  {
    "label": "QSvgRenderer",
    "importPath": "PyQt6.QtSvg",
    "description": "PyQt6.QtSvg",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvg",
    "documentation": {}
  },
  {
    "label": "QSvgRenderer",
    "importPath": "PyQt6.QtSvg",
    "description": "PyQt6.QtSvg",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvg",
    "documentation": {}
  },
  {
    "label": "QSvgRenderer",
    "importPath": "PyQt6.QtSvg",
    "description": "PyQt6.QtSvg",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvg",
    "documentation": {}
  },
  {
    "label": "QSvgRenderer",
    "importPath": "PyQt6.QtSvg",
    "description": "PyQt6.QtSvg",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvg",
    "documentation": {}
  },
  {
    "label": "QSvgRenderer",
    "importPath": "PyQt6.QtSvg",
    "description": "PyQt6.QtSvg",
    "isExtraImport": true,
    "detail": "PyQt6.QtSvg",
    "documentation": {}
  },
  {
    "label": "re",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "re",
    "description": "re",
    "detail": "re",
    "documentation": {}
  },
  {
    "label": "ElementTree",
    "importPath": "xml.etree",
    "description": "xml.etree",
    "isExtraImport": true,
    "detail": "xml.etree",
    "documentation": {}
  },
  {
    "label": "QGraphicsSceneMouseEvent",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QApplication",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMessageBox",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QApplication",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFileDialog",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMainWindow",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QTextEdit",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QApplication",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMainWindow",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLineEdit",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsScene",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFileDialog",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMessageBox",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsRectItem",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QApplication",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMainWindow",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMessageBox",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsItem",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsScene",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGridLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSpacerItem",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSizePolicy",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSpacerItem",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSizePolicy",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QComboBox",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsScene",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsSceneMouseEvent",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMenu",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsScene",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGroupBox",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLineEdit",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QLabel",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QTextEdit",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSizePolicy",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QScrollArea",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSizePolicy",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGridLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QSizePolicy",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsScene",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGridLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QGraphicsView",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QFrame",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QVBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QPushButton",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QWidget",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QApplication",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QMainWindow",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "QHBoxLayout",
    "importPath": "PyQt6.QtWidgets",
    "description": "PyQt6.QtWidgets",
    "isExtraImport": true,
    "detail": "PyQt6.QtWidgets",
    "documentation": {}
  },
  {
    "label": "unittest",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "unittest",
    "description": "unittest",
    "detail": "unittest",
    "documentation": {}
  },
  {
    "label": "sys",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "sys",
    "description": "sys",
    "detail": "sys",
    "documentation": {}
  },
  {
    "label": "os",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "os",
    "description": "os",
    "detail": "os",
    "documentation": {}
  },
  {
    "label": "Mock",
    "importPath": "unittest.mock",
    "description": "unittest.mock",
    "isExtraImport": true,
    "detail": "unittest.mock",
    "documentation": {}
  },
  {
    "label": "Pictograph",
    "importPath": "widgets.graph_editor.pictograph.pictograph",
    "description": "widgets.graph_editor.pictograph.pictograph",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph",
    "documentation": {}
  },
  {
    "label": "Pictograph",
    "importPath": "widgets.graph_editor.pictograph.pictograph",
    "description": "widgets.graph_editor.pictograph.pictograph",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph",
    "documentation": {}
  },
  {
    "label": "Pictograph",
    "importPath": "widgets.graph_editor.pictograph.pictograph",
    "description": "widgets.graph_editor.pictograph.pictograph",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph",
    "documentation": {}
  },
  {
    "label": "Pictograph",
    "importPath": "widgets.graph_editor.pictograph.pictograph",
    "description": "widgets.graph_editor.pictograph.pictograph",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "Grid",
    "importPath": "objects.grid",
    "description": "objects.grid",
    "isExtraImport": true,
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "xml.etree.ElementTree",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "xml.etree.ElementTree",
    "description": "xml.etree.ElementTree",
    "detail": "xml.etree.ElementTree",
    "documentation": {}
  },
  {
    "label": "ElementTree",
    "importPath": "xml.etree.ElementTree",
    "description": "xml.etree.ElementTree",
    "isExtraImport": true,
    "detail": "xml.etree.ElementTree",
    "documentation": {}
  },
  {
    "label": "deepcopy",
    "importPath": "copy",
    "description": "copy",
    "isExtraImport": true,
    "detail": "copy",
    "documentation": {}
  },
  {
    "label": "json",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "json",
    "description": "json",
    "detail": "json",
    "documentation": {}
  },
  {
    "label": "logging",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "logging",
    "description": "logging",
    "detail": "logging",
    "documentation": {}
  },
  {
    "label": "motion_type_combinations",
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "isExtraImport": true,
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "motion_type_letter_groups",
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "isExtraImport": true,
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "parallel_combinations",
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "isExtraImport": true,
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "letter_types",
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "isExtraImport": true,
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "letter_types",
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "isExtraImport": true,
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "positions_map",
    "importPath": "data.positions_map",
    "description": "data.positions_map",
    "isExtraImport": true,
    "detail": "data.positions_map",
    "documentation": {}
  },
  {
    "label": "svg.path",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "svg.path",
    "description": "svg.path",
    "detail": "svg.path",
    "documentation": {}
  },
  {
    "label": "cairosvg",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "cairosvg",
    "description": "cairosvg",
    "detail": "cairosvg",
    "documentation": {}
  },
  {
    "label": "Image",
    "importPath": "PIL",
    "description": "PIL",
    "isExtraImport": true,
    "detail": "PIL",
    "documentation": {}
  },
  {
    "label": "io",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "io",
    "description": "io",
    "detail": "io",
    "documentation": {}
  },
  {
    "label": "ArrowBoxDrag",
    "importPath": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "description": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "documentation": {}
  },
  {
    "label": "ArrowBoxView",
    "importPath": "widgets.graph_editor.arrowbox.arrowbox_view",
    "description": "widgets.graph_editor.arrowbox.arrowbox_view",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.arrowbox.arrowbox_view",
    "documentation": {}
  },
  {
    "label": "StartEndWidget",
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "MotionTypeWidget",
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "TurnsWidget",
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "HeaderWidget",
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "AttrBox",
    "importPath": "widgets.graph_editor.attr_panel.attr_box",
    "description": "widgets.graph_editor.attr_panel.attr_box",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_box",
    "documentation": {}
  },
  {
    "label": "DISTANCE",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "BETA_OFFSET",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_LENGTH",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_WIDTH",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRAPHBOARD_HEIGHT",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRAPHBOARD_WIDTH",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "PICTOGRAPH_SCALE",
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "isExtraImport": true,
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "math",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "math",
    "description": "math",
    "detail": "math",
    "documentation": {}
  },
  {
    "label": "GhostArrow",
    "importPath": "objects.ghosts.ghost_arrow",
    "description": "objects.ghosts.ghost_arrow",
    "isExtraImport": true,
    "detail": "objects.ghosts.ghost_arrow",
    "documentation": {}
  },
  {
    "label": "GhostProp",
    "importPath": "objects.ghosts.ghost_prop",
    "description": "objects.ghosts.ghost_prop",
    "isExtraImport": true,
    "detail": "objects.ghosts.ghost_prop",
    "documentation": {}
  },
  {
    "label": "LetterItem",
    "importPath": "objects.letter_item",
    "description": "objects.letter_item",
    "isExtraImport": true,
    "detail": "objects.letter_item",
    "documentation": {}
  },
  {
    "label": "LetterItem",
    "importPath": "objects.letter_item",
    "description": "objects.letter_item",
    "isExtraImport": true,
    "detail": "objects.letter_item",
    "documentation": {}
  },
  {
    "label": "PictographView",
    "importPath": "widgets.graph_editor.pictograph.pictograph_view",
    "description": "widgets.graph_editor.pictograph.pictograph_view",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph_view",
    "documentation": {}
  },
  {
    "label": "PictographView",
    "importPath": "widgets.graph_editor.pictograph.pictograph_view",
    "description": "widgets.graph_editor.pictograph.pictograph_view",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph_view",
    "documentation": {}
  },
  {
    "label": "LetterEngine",
    "importPath": "utilities.letter_engine",
    "description": "utilities.letter_engine",
    "isExtraImport": true,
    "detail": "utilities.letter_engine",
    "documentation": {}
  },
  {
    "label": "PictographEventHandler",
    "importPath": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "description": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "documentation": {}
  },
  {
    "label": "PictographInit",
    "importPath": "widgets.graph_editor.pictograph.pictogaph_init",
    "description": "widgets.graph_editor.pictograph.pictogaph_init",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictogaph_init",
    "documentation": {}
  },
  {
    "label": "PictographMenuHandler",
    "importPath": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "description": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "documentation": {}
  },
  {
    "label": "ArrowPositioner",
    "importPath": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "description": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "documentation": {}
  },
  {
    "label": "PropPositioner",
    "importPath": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "description": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "documentation": {}
  },
  {
    "label": "PropBoxDrag",
    "importPath": "widgets.graph_editor.propbox.propbox_drag",
    "description": "widgets.graph_editor.propbox.propbox_drag",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.propbox.propbox_drag",
    "documentation": {}
  },
  {
    "label": "PropBoxView",
    "importPath": "widgets.graph_editor.propbox.propbox_view",
    "description": "widgets.graph_editor.propbox.propbox_view",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.propbox.propbox_view",
    "documentation": {}
  },
  {
    "label": "JsonHandler",
    "importPath": "utilities.json_handler",
    "description": "utilities.json_handler",
    "isExtraImport": true,
    "detail": "utilities.json_handler",
    "documentation": {}
  },
  {
    "label": "JsonHandler",
    "importPath": "utilities.json_handler",
    "description": "utilities.json_handler",
    "isExtraImport": true,
    "detail": "utilities.json_handler",
    "documentation": {}
  },
  {
    "label": "ArrowBox",
    "importPath": "widgets.graph_editor.arrowbox.arrowbox",
    "description": "widgets.graph_editor.arrowbox.arrowbox",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.arrowbox.arrowbox",
    "documentation": {}
  },
  {
    "label": "PropBox",
    "importPath": "widgets.graph_editor.propbox.propbox",
    "description": "widgets.graph_editor.propbox.propbox",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.propbox.propbox",
    "documentation": {}
  },
  {
    "label": "AttrPanel",
    "importPath": "widgets.graph_editor.attr_panel.attr_panel",
    "description": "widgets.graph_editor.attr_panel.attr_panel",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.attr_panel.attr_panel",
    "documentation": {}
  },
  {
    "label": "VTGPanel",
    "importPath": "widgets.graph_editor.vtg_panel",
    "description": "widgets.graph_editor.vtg_panel",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.vtg_panel",
    "documentation": {}
  },
  {
    "label": "SequenceButtons",
    "importPath": "widgets.sequence.sequence_buttons",
    "description": "widgets.sequence.sequence_buttons",
    "isExtraImport": true,
    "detail": "widgets.sequence.sequence_buttons",
    "documentation": {}
  },
  {
    "label": "SequenceBeats",
    "importPath": "widgets.sequence.sequence_beats",
    "description": "widgets.sequence.sequence_beats",
    "isExtraImport": true,
    "detail": "widgets.sequence.sequence_beats",
    "documentation": {}
  },
  {
    "label": "ExportHandler",
    "importPath": "utilities.export_handler",
    "description": "utilities.export_handler",
    "isExtraImport": true,
    "detail": "utilities.export_handler",
    "documentation": {}
  },
  {
    "label": "LayoutManager",
    "importPath": "utilities.layout_manager",
    "description": "utilities.layout_manager",
    "isExtraImport": true,
    "detail": "utilities.layout_manager",
    "documentation": {}
  },
  {
    "label": "PictographGenerator",
    "importPath": "utilities.pictograph_generator",
    "description": "utilities.pictograph_generator",
    "isExtraImport": true,
    "detail": "utilities.pictograph_generator",
    "documentation": {}
  },
  {
    "label": "KeyEventHandler",
    "importPath": "widgets.graph_editor.key_event_handler",
    "description": "widgets.graph_editor.key_event_handler",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.key_event_handler",
    "documentation": {}
  },
  {
    "label": "GraphEditor",
    "importPath": "widgets.graph_editor.graph_editor",
    "description": "widgets.graph_editor.graph_editor",
    "isExtraImport": true,
    "detail": "widgets.graph_editor.graph_editor",
    "documentation": {}
  },
  {
    "label": "OptionPicker",
    "importPath": "widgets.option_picker.option_picker",
    "description": "widgets.option_picker.option_picker",
    "isExtraImport": true,
    "detail": "widgets.option_picker.option_picker",
    "documentation": {}
  },
  {
    "label": "Sequence",
    "importPath": "widgets.sequence.sequence",
    "description": "widgets.sequence.sequence",
    "isExtraImport": true,
    "detail": "widgets.sequence.sequence",
    "documentation": {}
  },
  {
    "label": "cProfile",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "cProfile",
    "description": "cProfile",
    "detail": "cProfile",
    "documentation": {}
  },
  {
    "label": "pstats",
    "kind": 6,
    "isExtraImport": true,
    "importPath": "pstats",
    "description": "pstats",
    "detail": "pstats",
    "documentation": {}
  },
  {
    "label": "MainWidget",
    "importPath": "widgets.main_widget",
    "description": "widgets.main_widget",
    "isExtraImport": true,
    "detail": "widgets.main_widget",
    "documentation": {}
  },
  {
    "label": "letter_types",
    "kind": 5,
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "peekOfCode": "letter_types = {\n    'Type 1': ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V'],\n    'Type 2': ['W', 'X', 'Y', 'Z', 'Σ', 'Δ', 'θ', 'Ω'],\n    'Type 3': ['W-', \"X-\", 'Y-', 'Z-', 'Σ-', 'Δ-', 'θ-', 'Ω-'],\n    'Type 4': ['Φ', 'Ψ', 'Λ'],\n    'Type 5': ['Φ-', 'Ψ-', 'Λ-'],\n    'Type 6': ['α', 'β', 'Γ'],\n}\nmotion_type_letter_groups = {\n    # Type 1",
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "motion_type_letter_groups",
    "kind": 5,
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "peekOfCode": "motion_type_letter_groups = {\n    # Type 1\n    \"pro_vs_pro\": \"ADGJMPS\",\n    \"anti_vs_anti\": \"BEHKNQT\",\n    \"pro_vs_anti\": \"CFILORUV\",\n    # Type 2\n    \"static_vs_pro\": \"WYΣθ\",\n    \"static_vs_anti\": \"XZΔΩ\",\n    # Type 3\n    \"dash_vs_pro\": \"W-Y-Σ-θ-\",",
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "motion_type_combinations",
    "kind": 5,
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "peekOfCode": "motion_type_combinations = {\n    (PRO, PRO): \"pro_vs_pro\",\n    (ANTI, ANTI): \"anti_vs_anti\",\n    (STATIC, STATIC): \"static_vs_static\",\n    (SHIFT): \"pro_vs_anti\",\n    (ANTI, PRO): \"pro_vs_anti\",\n    (STATIC, PRO): \"static_vs_pro\",\n    (PRO, STATIC): \"static_vs_pro\",\n    (STATIC, ANTI): \"static_vs_anti\",\n    (ANTI, STATIC): \"static_vs_anti\",",
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "parallel_combinations",
    "kind": 5,
    "importPath": "data.letter_engine_data",
    "description": "data.letter_engine_data",
    "peekOfCode": "parallel_combinations = {\n    (\"n\", \"e\", \"w\", \"s\"),\n    (\"e\", \"s\", \"n\", \"w\"),\n    (\"s\", \"w\", \"e\", \"n\"),\n    (\"w\", \"n\", \"s\", \"e\"),\n    (\"n\", \"w\", \"e\", \"s\"),\n    (\"w\", \"s\", \"n\", \"e\"),\n    (\"s\", \"e\", \"w\", \"n\"),\n    (\"e\", \"n\", \"s\", \"w\"),\n}",
    "detail": "data.letter_engine_data",
    "documentation": {}
  },
  {
    "label": "positions_map",
    "kind": 5,
    "importPath": "data.positions_map",
    "description": "data.positions_map",
    "peekOfCode": "positions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',\n    (EAST, RED, EAST, BLUE): 'beta2',\n    (SOUTH, RED, SOUTH, BLUE): 'beta3',\n    (WEST, RED, WEST, BLUE): 'beta4',\n    (NORTH, RED, WEST, BLUE): 'gamma1',",
    "detail": "data.positions_map",
    "documentation": {}
  },
  {
    "label": "start_end_location_mapping",
    "kind": 5,
    "importPath": "data.start_end_location_mapping",
    "description": "data.start_end_location_mapping",
    "peekOfCode": "start_end_location_mapping = {\n    NORTHEAST: {\n        CLOCKWISE: {ANTI: (EAST, NORTH), PRO: (NORTH, EAST)},\n        COUNTER_CLOCKWISE: {ANTI: (NORTH, EAST), PRO: (EAST, NORTH)}\n    },\n    NORTHWEST: {\n        CLOCKWISE: {ANTI: (NORTH, WEST), PRO: (WEST, NORTH)},\n        COUNTER_CLOCKWISE: {ANTI: (WEST, NORTH), PRO: (NORTH, WEST)}\n    },\n    SOUTHEAST: {",
    "detail": "data.start_end_location_mapping",
    "documentation": {}
  },
  {
    "label": "GhostArrow",
    "kind": 6,
    "importPath": "objects.ghosts.ghost_arrow",
    "description": "objects.ghosts.ghost_arrow",
    "peekOfCode": "class GhostArrow(Arrow):\n    \"\"\"\n    Represents a ghost arrow object, displaying the position that an arrow will be while dragging if the user were to drop it.\n    Inherits from the Arrow class.\n    Attributes:\n        pictograph (Pictograph): The pictograph object.\n        color (str): The color of the arrow.\n        target_arrow (Arrow): The arrow that the ghost arrow is copying.\n    Methods:\n        __init__: Initialize a GhostArrow object.",
    "detail": "objects.ghosts.ghost_arrow",
    "documentation": {}
  },
  {
    "label": "GhostProp",
    "kind": 6,
    "importPath": "objects.ghosts.ghost_prop",
    "description": "objects.ghosts.ghost_prop",
    "peekOfCode": "class GhostProp(Prop):\n    \"\"\"\n    Represents a ghost prop object, displaying the position that a prop will be while dragging if the user were to drop it.\n    Inherits from the Prop class.\n    Attributes:\n        pictograph (Pictograph): The pictograph object.\n        color (str): The color of the prop.\n        target_prop (Prop): The prop that the ghost prop is copying.\n    Methods:\n        __init__: Initialize a GhostProp object.",
    "detail": "objects.ghosts.ghost_prop",
    "documentation": {}
  },
  {
    "label": "Arrow",
    "kind": 6,
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "peekOfCode": "class Arrow(GraphicalObject):\n    def __init__(self, pictograph, attributes) -> None:\n        svg_file = self.get_svg_file(attributes[MOTION_TYPE], attributes[TURNS])\n        super().__init__(svg_file, pictograph)\n        self.setAcceptHoverEvents(True)\n        self._setup_attributes(pictograph, attributes)\n    ### SETUP ###\n    def _setup_attributes(\n        self, pictograph: \"Pictograph\", attributes: \"ArrowAttributesDicts\"\n    ) -> None:",
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "StaticArrow",
    "kind": 6,
    "importPath": "objects.arrow",
    "description": "objects.arrow",
    "peekOfCode": "class StaticArrow(Arrow):\n    def __init__(self, pictograph, attributes) -> None:\n        super().__init__(pictograph, attributes)\n        self._disable_interactivity()\n        self.hide()\n    def _disable_interactivity(self) -> None:\n        self.setFlag(QGraphicsSvgItem.GraphicsItemFlag.ItemIsSelectable, False)\n        self.setFlag(QGraphicsSvgItem.GraphicsItemFlag.ItemIsMovable, False)",
    "detail": "objects.arrow",
    "documentation": {}
  },
  {
    "label": "GraphicalObject",
    "kind": 6,
    "importPath": "objects.graphical_object",
    "description": "objects.graphical_object",
    "peekOfCode": "class GraphicalObject(QGraphicsSvgItem):\n    def __init__(self, svg_file: str, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.svg_file = svg_file\n        self.pictograph = pictograph\n        self.renderer: QSvgRenderer = None\n        self.color: Color = None\n        self.center = self.boundingRect().center()\n        if svg_file:\n            self.setup_svg_renderer(svg_file)",
    "detail": "objects.graphical_object",
    "documentation": {}
  },
  {
    "label": "Grid",
    "kind": 6,
    "importPath": "objects.grid",
    "description": "objects.grid",
    "peekOfCode": "class Grid(QGraphicsSvgItem):\n    \"\"\"\n    Represents a grid object in the application.\n    Args:\n        grid_svg_path (str): The path to the SVG file for the grid.\n    Attributes:\n        svg_file (str): The path to the SVG file for the grid.\n        center (QPointF): The coordinates of the center point of the grid.\n        handpoints (Dict[str, QPointF]): A dictionary mapping hand point names to their coordinates.\n        layer2_points (Dict[str, QPointF]): A dictionary mapping layer 2 point names to their coordinates.",
    "detail": "objects.grid",
    "documentation": {}
  },
  {
    "label": "LetterItem",
    "kind": 6,
    "importPath": "objects.letter_item",
    "description": "objects.letter_item",
    "peekOfCode": "class LetterItem(QGraphicsSvgItem):\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.pictograph = pictograph\n    def position_letter_item(self, letter_item: \"QGraphicsSvgItem\") -> None:\n        x = (\n            self.pictograph.grid.boundingRect().width() / 2\n            - letter_item.boundingRect().width() / 2\n        )\n        y = self.pictograph.grid.boundingRect().height()",
    "detail": "objects.letter_item",
    "documentation": {}
  },
  {
    "label": "Motion",
    "kind": 6,
    "importPath": "objects.motion",
    "description": "objects.motion",
    "peekOfCode": "class Motion:\n    def __init__(\n        self,\n        pictograph: \"Pictograph\",\n        arrow: \"Arrow\",\n        prop: \"Prop\",\n        attributes: MotionAttributesDicts,\n    ) -> None:\n        self.pictograph = pictograph\n        self.arrow = arrow",
    "detail": "objects.motion",
    "documentation": {}
  },
  {
    "label": "Prop",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Prop(GraphicalObject):\n    def __init__(self, pictograph, attributes: Dict) -> None:\n        svg_file = self.get_svg_file(attributes[PROP_TYPE])\n        super().__init__(svg_file, pictograph)\n        self._setup_attributes(pictograph, attributes)\n        self.update_appearance()\n    def _setup_attributes(\n        self, pictograph: \"Pictograph\", attributes: \"PropAttributesDicts\"\n    ) -> None:\n        self.pictograph = pictograph",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Staff",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Staff(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = STAFF\n        super().__init__(pictograph, attributes)\nclass Triad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = TRIAD\n        super().__init__(pictograph, attributes)\nclass Hoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Triad",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Triad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = TRIAD\n        super().__init__(pictograph, attributes)\nclass Hoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = HOOP\n        super().__init__(pictograph, attributes)\nclass Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Hoop",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Hoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = HOOP\n        super().__init__(pictograph, attributes)\nclass Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = FAN\n        super().__init__(pictograph, attributes)\nclass Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Fan",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = FAN\n        super().__init__(pictograph, attributes)\nclass Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = CLUB\n        super().__init__(pictograph, attributes)\nclass Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Club",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = CLUB\n        super().__init__(pictograph, attributes)\nclass Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = BUUGENG\n        super().__init__(pictograph, attributes)",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "Buugeng",
    "kind": 6,
    "importPath": "objects.props",
    "description": "objects.props",
    "peekOfCode": "class Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes) -> None:\n        attributes[PROP_TYPE] = BUUGENG\n        super().__init__(pictograph, attributes)",
    "detail": "objects.props",
    "documentation": {}
  },
  {
    "label": "GRAPHBOARD_SCALE",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "GRAPHBOARD_SCALE = 0.4\nPICTOGRAPH_SCALE = 0.2\nARROWBOX_SCALE = GRAPHBOARD_SCALE * 0.75\nSTAFF_WIDTH = 25\nSTAFF_LENGTH = 250\nBETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "PICTOGRAPH_SCALE",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "PICTOGRAPH_SCALE = 0.2\nARROWBOX_SCALE = GRAPHBOARD_SCALE * 0.75\nSTAFF_WIDTH = 25\nSTAFF_LENGTH = 250\nBETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "ARROWBOX_SCALE",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "ARROWBOX_SCALE = GRAPHBOARD_SCALE * 0.75\nSTAFF_WIDTH = 25\nSTAFF_LENGTH = 250\nBETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_WIDTH",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "STAFF_WIDTH = 25\nSTAFF_LENGTH = 250\nBETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_LENGTH",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "STAFF_LENGTH = 250\nBETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "BETA_OFFSET",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "BETA_OFFSET = 25\nGRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRAPHBOARD_HEIGHT",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "GRAPHBOARD_HEIGHT = 900\nGRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRAPHBOARD_WIDTH",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "GRAPHBOARD_WIDTH = 750\nGRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRID_WIDTH",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "GRID_WIDTH = 650\nGRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "GRID_PADDING",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "GRID_PADDING = (GRAPHBOARD_HEIGHT - GRID_WIDTH) / 2\nDISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "DISTANCE",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "DISTANCE = 30\nRATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "RATIO",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "RATIO = 75/90\nLETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "LETTER_ITEM_HEIGHT",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "LETTER_ITEM_HEIGHT = 100\nBUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "BUTTON_SIZE",
    "kind": 5,
    "importPath": "settings.numerical_constants",
    "description": "settings.numerical_constants",
    "peekOfCode": "BUTTON_SIZE = 30",
    "detail": "settings.numerical_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_DIR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ARROW_DIR = \"resources/images/arrows/\"\nPROP_DIR = \"resources/images/props/\"\nLETTER_SVG_DIR = \"resources/images/letters/\"\nICON_DIR = \"resources/images/icons/\"\nSVG_NS = \"http://www.w3.org/2000/svg\"\nGRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_DIR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "PROP_DIR = \"resources/images/props/\"\nLETTER_SVG_DIR = \"resources/images/letters/\"\nICON_DIR = \"resources/images/icons/\"\nSVG_NS = \"http://www.w3.org/2000/svg\"\nGRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LETTER_SVG_DIR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "LETTER_SVG_DIR = \"resources/images/letters/\"\nICON_DIR = \"resources/images/icons/\"\nSVG_NS = \"http://www.w3.org/2000/svg\"\nGRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_DIR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ICON_DIR = \"resources/images/icons/\"\nSVG_NS = \"http://www.w3.org/2000/svg\"\nGRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SVG_NS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SVG_NS = \"http://www.w3.org/2000/svg\"\nGRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "GRID_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "GRID_FILE_PATH = \"resources/images/grid/grid.svg\"\nSTAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "STAFF_SVG_FILE_PATH = \"resources/images/props/staff.svg\"\nCLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLUB_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLUB_SVG_FILE_PATH = \"resources/images/props/club.svg\"\nBUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BUUGENG_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "BUUGENG_SVG_FILE_PATH = \"resources/images/props/buugeng.svg\"\nFAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "FAN_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "FAN_SVG_FILE_PATH = \"resources/images/props/fan.svg\"\nTRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TRIAD_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "TRIAD_SVG_FILE_PATH = \"resources/images/props/triad.svg\"\nHOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "HOOP_SVG_FILE_PATH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "HOOP_SVG_FILE_PATH = \"resources/images/props/hoop.svg\"\nBLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "BLUE = \"blue\"\nRED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "RED = \"red\"\nRED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RED_HEX",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "RED_HEX = \"#ED1C24\"\nBLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BLUE_HEX",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "BLUE_HEX = \"#2E3192\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LEFT",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "LEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "RIGHT",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "RIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "UP",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "UP = \"up\"\nDOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DOWN",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "DOWN = \"down\"\nPRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PRO",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "PRO = \"pro\"\nANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ANTI",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ANTI = \"anti\"\nDASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DASH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "DASH = \"dash\"\nSTATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STATIC",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "STATIC = \"static\"\nCOLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "COLOR = \"color\"\nMOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MOTION_TYPE",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "MOTION_TYPE = \"motion_type\"\nROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ROTATION_DIRECTION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ROTATION_DIRECTION = \"rotation_direction\"\nTURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TURNS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "TURNS = \"turns\"\nLOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LOCATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "LOCATION = \"location\"\nARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_LOCATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ARROW_LOCATION = \"arrow_location\"\nPROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_LOCATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "PROP_LOCATION = \"prop_location\"\nSTART_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LOCATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "START_LOCATION = \"start_location\"\nEND_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LOCATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "END_LOCATION = \"end_location\"\nSTART_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_ORIENTATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "START_ORIENTATION = \"start_orientation\"\nEND_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_ORIENTATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "END_ORIENTATION = \"end_orientation\"\nSTART_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_LAYER",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "START_LAYER = \"start_layer\"\nEND_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_LAYER",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "END_LAYER = \"end_layer\"\nCLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLOCKWISE = \"cw\" or \"CW\"\nCOUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "COUNTER_CLOCKWISE = \"ccw\" or \"CCW\"\nSTART_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "START_POS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "START_POS = \"start_position\"\nEND_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "END_POS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "END_POS = \"end_position\"\nPROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP_TYPE",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "PROP_TYPE = \"prop_type\"\nLAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "LAYER",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "LAYER = \"layer\"\nAXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "AXIS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "AXIS = \"axis\"\nORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ORIENTATION",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ORIENTATION = \"orientation\"\nIN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "IN",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "IN = \"in\"\nOUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "OUT",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "OUT = \"out\"\nHORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "HORIZONTAL",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "HORIZONTAL = \"horizontal\"\nVERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "VERTICAL",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "VERTICAL = \"vertical\"\nNORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "NORTH = \"n\"\nSOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTH",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SOUTH = \"s\"\nEAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "EAST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "EAST = \"e\"\nWEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "WEST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "WEST = \"w\"\nNORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHWEST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "NORTHWEST = \"nw\"\nNORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "NORTHEAST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "NORTHEAST = \"ne\"\nSOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHWEST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SOUTHWEST = \"sw\"\nSOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SOUTHEAST",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SOUTHEAST = \"se\"\nARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROWS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ARROWS = \"arrows\"\nSTAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STAFFS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "STAFFS = \"staffs\"\nPROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "PROP",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "PROP = \"prop\"\nSTAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STAFF",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "STAFF = \"staff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLUB",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLUB = \"club\"\nBUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "BUUGENG",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "BUUGENG = \"buugeng\"\nFAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "FAN",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "FAN = \"fan\"\nTRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TRIAD",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "TRIAD = \"triad\"\nHOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "HOOP",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "HOOP = \"hoop\"\nCOLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COLOR_MAP",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "COLOR_MAP = {RED: RED_HEX, BLUE: BLUE_HEX}\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCK_DIR",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCKWISE_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "COUNTER_CLOCKWISE_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "COUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "CLOCK_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "CLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SWAP_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SWAP_ICON = \"swap.jpg\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "MIRROR_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "MIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "DECREMENT_TURNS_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "DECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "INCREMENT_TURNS_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "INCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "SWAP_COLORS_ICON",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "SWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,\n}",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ICON_PATHS",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ICON_PATHS = {\n    \"swap_motion_type\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,\n}\nARROW_ATTRIBUTES = [",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "ARROW_ATTRIBUTES",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "ARROW_ATTRIBUTES = [\n    COLOR,\n    MOTION_TYPE,\n    ROTATION_DIRECTION,\n    LOCATION,\n    START_LOCATION,\n    END_LOCATION,\n    TURNS,\n]\nSTAFF_ATTRIBUTES = [",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "STAFF_ATTRIBUTES",
    "kind": 5,
    "importPath": "settings.string_constants",
    "description": "settings.string_constants",
    "peekOfCode": "STAFF_ATTRIBUTES = [\n    COLOR,\n    LOCATION,\n    LAYER,\n]",
    "detail": "settings.string_constants",
    "documentation": {}
  },
  {
    "label": "TestArrow",
    "kind": 6,
    "importPath": "tests.test_arrow",
    "description": "tests.test_arrow",
    "peekOfCode": "class TestArrow(unittest.TestCase):\n    def setUp(self):\n        self.pictograph = None  # Replace with an actual Pictograph object\n        self.attributes = {\n            \"color\": \"red\",\n            \"motion_type\": \"pro\",\n            \"rotation_direction\": \"clockwise\",\n            \"location\": \"northeast\",\n            \"start_location\": \"W\",\n            \"end_location\": \"E\",",
    "detail": "tests.test_arrow",
    "documentation": {}
  },
  {
    "label": "TestPictograph",
    "kind": 6,
    "importPath": "tests.test_graphboard",
    "description": "tests.test_graphboard",
    "peekOfCode": "class TestPictograph(unittest.TestCase):\n    def setUp(self):\n        self.mock_main_widget = Mock()\n        self.mock_main_widget.letters = {\n            \"A\": [\n                [\n                    {\"start_position\": \"alpha1\", \"end_position\": \"alpha2\"},\n                    {\n                        \"color\": \"blue\",\n                        \"motion_type\": \"pro\",",
    "detail": "tests.test_graphboard",
    "documentation": {}
  },
  {
    "label": "current_directory",
    "kind": 5,
    "importPath": "tests.test_graphboard",
    "description": "tests.test_graphboard",
    "peekOfCode": "current_directory = os.path.dirname(__file__)\nparent_directory = os.path.join(current_directory, \"..\")\nsys.path.append(parent_directory)\nfrom PyQt6.QtWidgets import QApplication\nfrom widgets.graph_editor.pictograph.pictograph import Pictograph\n# (The Pictograph and related classes would be imported here)\napp = QApplication([])  # QApplication instance is required to test PyQt classes\nclass TestPictograph(unittest.TestCase):\n    def setUp(self):\n        self.mock_main_widget = Mock()",
    "detail": "tests.test_graphboard",
    "documentation": {}
  },
  {
    "label": "parent_directory",
    "kind": 5,
    "importPath": "tests.test_graphboard",
    "description": "tests.test_graphboard",
    "peekOfCode": "parent_directory = os.path.join(current_directory, \"..\")\nsys.path.append(parent_directory)\nfrom PyQt6.QtWidgets import QApplication\nfrom widgets.graph_editor.pictograph.pictograph import Pictograph\n# (The Pictograph and related classes would be imported here)\napp = QApplication([])  # QApplication instance is required to test PyQt classes\nclass TestPictograph(unittest.TestCase):\n    def setUp(self):\n        self.mock_main_widget = Mock()\n        self.mock_main_widget.letters = {",
    "detail": "tests.test_graphboard",
    "documentation": {}
  },
  {
    "label": "app",
    "kind": 5,
    "importPath": "tests.test_graphboard",
    "description": "tests.test_graphboard",
    "peekOfCode": "app = QApplication([])  # QApplication instance is required to test PyQt classes\nclass TestPictograph(unittest.TestCase):\n    def setUp(self):\n        self.mock_main_widget = Mock()\n        self.mock_main_widget.letters = {\n            \"A\": [\n                [\n                    {\"start_position\": \"alpha1\", \"end_position\": \"alpha2\"},\n                    {\n                        \"color\": \"blue\",",
    "detail": "tests.test_graphboard",
    "documentation": {}
  },
  {
    "label": "Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Letters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type1Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type1Letters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type2Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type2Letters = Literal[\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"Σ\",\n    \"Δ\",\n    \"θ\",\n    \"Ω\",\n]",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type3Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type3Letters = Literal[\n    \"W-\",\n    \"X-\",\n    \"Y-\",\n    \"Z-\",\n    \"Σ-\",\n    \"Δ-\",\n    \"θ-\",\n    \"Ω-\",\n]",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type4Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type4Letters = Literal[\n    \"Φ\",\n    \"Ψ\",\n    \"Λ\",\n]\nType5Letters = Literal[\n    \"Φ-\",\n    \"Ψ-\",\n    \"Λ-\",\n]",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type5Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type5Letters = Literal[\n    \"Φ-\",\n    \"Ψ-\",\n    \"Λ-\",\n]\nType6Letters = Literal[\n    \"α\",\n    \"β\",\n    \"Γ\",\n]",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "Type6Letters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "Type6Letters = Literal[\n    \"α\",\n    \"β\",\n    \"Γ\",\n]\nAlphaEndingLetters = Literal[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"W\", \"X\", \"Φ\", \"Φ-\", \"α\"]\nBetaEndingLetters = Literal[\"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"Y\", \"Z\", \"Ψ\", \"Ψ-\", \"β\"]\nGammaEndingLetters = Literal[\n    \"M\",\n    \"N\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "AlphaEndingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "AlphaEndingLetters = Literal[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"W\", \"X\", \"Φ\", \"Φ-\", \"α\"]\nBetaEndingLetters = Literal[\"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"Y\", \"Z\", \"Ψ\", \"Ψ-\", \"β\"]\nGammaEndingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "BetaEndingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "BetaEndingLetters = Literal[\"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"Y\", \"Z\", \"Ψ\", \"Ψ-\", \"β\"]\nGammaEndingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "GammaEndingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "GammaEndingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "AlphaStartingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "AlphaStartingLetters = Literal[\n    \"A\", \"B\", \"C\", \"J\", \"K\", \"L\", \"Σ\", \"Δ\", \"θ-\", \"Ω-\", \"Ψ\", \"Φ-\", \"α\"\n]\nBetaStartingLetters = Literal[\n    \"G\", \"H\", \"I\", \"D\", \"E\", \"F\", \"θ\", \"Ω\", \"Σ-\", \"Δ-\", \"Ψ-\", \"Φ\", \"β\"\n]\nGammaStartingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "BetaStartingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "BetaStartingLetters = Literal[\n    \"G\", \"H\", \"I\", \"D\", \"E\", \"F\", \"θ\", \"Ω\", \"Σ-\", \"Δ-\", \"Ψ-\", \"Φ\", \"β\"\n]\nGammaStartingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "GammaStartingLetters",
    "kind": 5,
    "importPath": "utilities.TypeChecking.Letters",
    "description": "utilities.TypeChecking.Letters",
    "peekOfCode": "GammaStartingLetters = Literal[\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
    "detail": "utilities.TypeChecking.Letters",
    "documentation": {}
  },
  {
    "label": "SpecificPosition",
    "kind": 5,
    "importPath": "utilities.TypeChecking.SpecificPosition",
    "description": "utilities.TypeChecking.SpecificPosition",
    "peekOfCode": "SpecificPosition = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",\n    \"beta2\",\n    \"beta3\",\n    \"beta4\",\n    \"gamma1\",",
    "detail": "utilities.TypeChecking.SpecificPosition",
    "documentation": {}
  },
  {
    "label": "SpecificStartEndPositionsDicts",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition\nclass OptimalLocationsDicts(TypedDict):\n    optimal_red_location: OptimalLocationEntries\n    optimal_blue_location: OptimalLocationEntries\nclass PropAttributesDicts(TypedDict):\n    color: Color\n    prop_type: PropType\n    location: Location",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationsDicts",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class OptimalLocationsDicts(TypedDict):\n    optimal_red_location: OptimalLocationEntries\n    optimal_blue_location: OptimalLocationEntries\nclass PropAttributesDicts(TypedDict):\n    color: Color\n    prop_type: PropType\n    location: Location\n    layer: Layer\n    orientation: Orientation\n### MOTION ATTRIBUTES ###",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropAttributesDicts",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class PropAttributesDicts(TypedDict):\n    color: Color\n    prop_type: PropType\n    location: Location\n    layer: Layer\n    orientation: Orientation\n### MOTION ATTRIBUTES ###\nclass MotionAttributesDicts(TypedDict):\n    color: Color\n    motion_type: MotionType",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributesDicts",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class MotionAttributesDicts(TypedDict):\n    color: Color\n    motion_type: MotionType\n    rotation_direction: RotationDirection\n    location: Location\n    turns: Turns\n    start_location: Location\n    start_orientation: Orientation\n    start_layer: Layer\n    end_location: Location",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ArrowAttributesDicts",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class ArrowAttributesDicts(TypedDict):\n    color: Color\n    motion_type: MotionType\n    rotation_direction: RotationDirection\n    location: Location\n    start_location: Location\n    end_location: Location\n    turns: Turns\nMotionAttributes = Literal[\n    \"color\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PictographAttributesDict",
    "kind": 6,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "class PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position\n    letter_type: LetterType\n    mode: Mode\n    motion_type_combination: MotionTypeCombinations\nHybridCombinations = Literal[\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Color",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Color = Literal[\"red\", \"blue\"]\nMotionType = Literal[\"pro\", \"anti\", \"dash\", \"static\"]\nLocation = Literal[\"n\", \"e\", \"s\", \"w\", \"ne\", \"se\", \"sw\", \"nw\"]\nRotationDirection = Literal[\"cw\", \"ccw\"]\nTurns = float | Literal[\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\"]\n### STAFF ATTRIBUTES ###\nPropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionType",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "MotionType = Literal[\"pro\", \"anti\", \"dash\", \"static\"]\nLocation = Literal[\"n\", \"e\", \"s\", \"w\", \"ne\", \"se\", \"sw\", \"nw\"]\nRotationDirection = Literal[\"cw\", \"ccw\"]\nTurns = float | Literal[\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\"]\n### STAFF ATTRIBUTES ###\nPropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Location",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Location = Literal[\"n\", \"e\", \"s\", \"w\", \"ne\", \"se\", \"sw\", \"nw\"]\nRotationDirection = Literal[\"cw\", \"ccw\"]\nTurns = float | Literal[\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\"]\n### STAFF ATTRIBUTES ###\nPropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationDirection",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "RotationDirection = Literal[\"cw\", \"ccw\"]\nTurns = float | Literal[\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\"]\n### STAFF ATTRIBUTES ###\nPropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Turns",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Turns = float | Literal[\"fl\", \"0\", \"0.5\", \"1\", \"1.5\", \"2\"]\n### STAFF ATTRIBUTES ###\nPropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropAttributes",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "PropAttributes = Literal[\n    \"color\", \"prop_type\", \"location\", \"layer\", \"axis\", \"orientation\"\n]\nPropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PropType",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "PropType = Literal[\"staff\", \"buugeng\", \"club\", \"fan\", \"hoop\", \"triad\"]\nLayer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Layer = Literal[1, 2]\nAxis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Axis",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Axis = Literal[\"vertical\", \"horizontal\"]\nLayer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer1_Orientation",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Layer1_Orientation = Literal[\"in\", \"out\"]\nLayer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Layer2_Orientation",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Layer2_Orientation = Literal[\"cw\", \"ccw\"]\nOrientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Orientation",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Orientation = Literal[\"in\", \"out\", \"cw\", \"ccw\"]\nRotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "RotationAngle",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "RotationAngle = Literal[0, 90, 180, 270]\nPosition = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Position",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Position = Literal[\"alpha\", \"beta\", \"gamma\"]\nDirection = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Direction",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Direction = Literal[\"right\", \"left\", \"down\", \"up\"]\nOptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationEntries",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "OptimalLocationEntries = Dict[Literal[\"x\", \"y\"], float]\nColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition\nclass OptimalLocationsDicts(TypedDict):",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ColorHex",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "ColorHex = Literal[\"#ED1C24\", \"#2E3192\"]\nColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition\nclass OptimalLocationsDicts(TypedDict):\n    optimal_red_location: OptimalLocationEntries",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ColorMap",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "ColorMap = Dict[Color, ColorHex]\nLetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition\nclass OptimalLocationsDicts(TypedDict):\n    optimal_red_location: OptimalLocationEntries\n    optimal_blue_location: OptimalLocationEntries",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterType",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "LetterType = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nclass SpecificStartEndPositionsDicts(TypedDict):\n    start_position: SpecificPosition\n    end_position: SpecificPosition\nclass OptimalLocationsDicts(TypedDict):\n    optimal_red_location: OptimalLocationEntries\n    optimal_blue_location: OptimalLocationEntries\nclass PropAttributesDicts(TypedDict):",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionAttributes",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "MotionAttributes = Literal[\n    \"color\",\n    \"motion_type\",\n    \"location\",\n    \"rotation_direction\",\n    \"turns\",\n    \"start_location\",\n    \"end_location\",\n    \"start_orientation\",\n    \"end_orientation\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionTypeCombinations",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "MotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",\n    \"dash_vs_pro\",\n    \"dash_vs_anti\",\n    \"dash_vs_static\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "StartEndLocationTuple",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "StartEndLocationTuple = Tuple[Location, Location]\nPreprocessedStartEndCombinations = Dict[\n    SpecificStartEndPositionsDicts,\n    List[Tuple[Letters, List[MotionAttributesDicts]]],\n]\nOptimalLocationsDicts = Dict[str, OptimalLocationEntries]\nDictVariants = (\n    MotionAttributesDicts | SpecificStartEndPositionsDicts | OptimalLocationsDicts\n)\nDictVariantsLists = List[DictVariants]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "PreprocessedStartEndCombinations",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "PreprocessedStartEndCombinations = Dict[\n    SpecificStartEndPositionsDicts,\n    List[Tuple[Letters, List[MotionAttributesDicts]]],\n]\nOptimalLocationsDicts = Dict[str, OptimalLocationEntries]\nDictVariants = (\n    MotionAttributesDicts | SpecificStartEndPositionsDicts | OptimalLocationsDicts\n)\nDictVariantsLists = List[DictVariants]\nLetterDictionary = Dict[Letters, List[List[DictVariants]]]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "OptimalLocationsDicts",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "OptimalLocationsDicts = Dict[str, OptimalLocationEntries]\nDictVariants = (\n    MotionAttributesDicts | SpecificStartEndPositionsDicts | OptimalLocationsDicts\n)\nDictVariantsLists = List[DictVariants]\nLetterDictionary = Dict[Letters, List[List[DictVariants]]]\nMode = Optional[Literal[\"TS\", \"TO\", \"SS\", \"SO\", \"QTS\", \"QTO\"]]\nclass PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "DictVariants",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "DictVariants = (\n    MotionAttributesDicts | SpecificStartEndPositionsDicts | OptimalLocationsDicts\n)\nDictVariantsLists = List[DictVariants]\nLetterDictionary = Dict[Letters, List[List[DictVariants]]]\nMode = Optional[Literal[\"TS\", \"TO\", \"SS\", \"SO\", \"QTS\", \"QTO\"]]\nclass PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position\n    letter_type: LetterType",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "DictVariantsLists",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "DictVariantsLists = List[DictVariants]\nLetterDictionary = Dict[Letters, List[List[DictVariants]]]\nMode = Optional[Literal[\"TS\", \"TO\", \"SS\", \"SO\", \"QTS\", \"QTO\"]]\nclass PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position\n    letter_type: LetterType\n    mode: Mode\n    motion_type_combination: MotionTypeCombinations\nHybridCombinations = Literal[",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterDictionary",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "LetterDictionary = Dict[Letters, List[List[DictVariants]]]\nMode = Optional[Literal[\"TS\", \"TO\", \"SS\", \"SO\", \"QTS\", \"QTO\"]]\nclass PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position\n    letter_type: LetterType\n    mode: Mode\n    motion_type_combination: MotionTypeCombinations\nHybridCombinations = Literal[\n    \"pro_vs_anti\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "Mode",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "Mode = Optional[Literal[\"TS\", \"TO\", \"SS\", \"SO\", \"QTS\", \"QTO\"]]\nclass PictographAttributesDict(TypedDict):\n    start_position: Position\n    end_position: Position\n    letter_type: LetterType\n    mode: Mode\n    motion_type_combination: MotionTypeCombinations\nHybridCombinations = Literal[\n    \"pro_vs_anti\",\n    \"static_vs_pro\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "HybridCombinations",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "HybridCombinations = Literal[\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",\n    \"dash_vs_pro\",\n    \"dash_vs_anti\",\n    \"dash_vs_static\",\n]\n### LETTER GROUPS ###\nLetterGroupsByMotionType = Literal[",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "LetterGroupsByMotionType",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "LetterGroupsByMotionType = Literal[\n    \"ADGJMPS\",\n    \"BEHKNQT\",\n    \"CFILORUV\",\n    \"WYΣθ\",\n    \"XZΔΩ\",\n    \"W-Y-Σ-θ-\",\n    \"X-Z-Δ-Ω-\",\n    \"ΦΨΛ\",\n    \"Φ-Ψ-Λ-\",",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "MotionTypeLetterGroupMap",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "MotionTypeLetterGroupMap = Dict[MotionTypeCombinations, LetterGroupsByMotionType]\nParallelCombinationsSet = Set[Tuple[str, str, str, str]]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ParallelCombinationsSet",
    "kind": 5,
    "importPath": "utilities.TypeChecking.TypeChecking",
    "description": "utilities.TypeChecking.TypeChecking",
    "peekOfCode": "ParallelCombinationsSet = Set[Tuple[str, str, str, str]]",
    "detail": "utilities.TypeChecking.TypeChecking",
    "documentation": {}
  },
  {
    "label": "ExportHandler",
    "kind": 6,
    "importPath": "utilities.export_handler",
    "description": "utilities.export_handler",
    "peekOfCode": "class ExportHandler:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.pictograph = main_widget.graph_editor.pictograph\n        self.grid = self.pictograph.grid\n        self.get_fill_color(self.grid.svg_file)\n        self.export_to_png()\n    ### EXPORTERS ###\n    def export_to_png(self) -> None:\n        selectedItems = self.pictograph.selectedItems()\n        image = QImage(",
    "detail": "utilities.export_handler",
    "documentation": {}
  },
  {
    "label": "JsonHandler",
    "kind": 6,
    "importPath": "utilities.json_handler",
    "description": "utilities.json_handler",
    "peekOfCode": "class JsonHandler(QObject):\n    def connect_scene(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def load_all_letters(self) -> LetterDictionary:\n        directory = \"resources/json\"\n        letters: LetterDictionary = {}\n        for root, dirs, files in os.walk(directory):\n            for filename in files:\n                if filename.endswith(\".json\"):\n                    filepath = os.path.join(root, filename)",
    "detail": "utilities.json_handler",
    "documentation": {}
  },
  {
    "label": "JsonValidationEngine",
    "kind": 6,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "class JsonValidationEngine(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.initUI()\n    def initUI(self):\n        self.setWindowTitle('JSON File Validator')\n        self.setGeometry(100, 100, 800, 600)\n        layout = QVBoxLayout()\n        self.label = QLabel('Select JSON files to validate')\n        self.label.setAlignment(Qt.AlignmentFlag.AlignCenter)",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_colors",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_colors = {RED, BLUE}\nvalid_motion_types = {'pro', 'anti', 'dash', 'static', 'float', 'chu'}\nvalid_locations = {'ne', 'se', 'sw', 'nw', None}\nvalid_rotation_directions = {'cw', 'ccw', None}\nvalid_locations = {'n', 'e', 's', 'w'}\nvalid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_motion_types",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_motion_types = {'pro', 'anti', 'dash', 'static', 'float', 'chu'}\nvalid_locations = {'ne', 'se', 'sw', 'nw', None}\nvalid_rotation_directions = {'cw', 'ccw', None}\nvalid_locations = {'n', 'e', 's', 'w'}\nvalid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_locations",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_locations = {'ne', 'se', 'sw', 'nw', None}\nvalid_rotation_directions = {'cw', 'ccw', None}\nvalid_locations = {'n', 'e', 's', 'w'}\nvalid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_rotation_directions",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_rotation_directions = {'cw', 'ccw', None}\nvalid_locations = {'n', 'e', 's', 'w'}\nvalid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',\n    (EAST, RED, EAST, BLUE): 'beta2',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_locations",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_locations = {'n', 'e', 's', 'w'}\nvalid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',\n    (EAST, RED, EAST, BLUE): 'beta2',\n    (SOUTH, RED, SOUTH, BLUE): 'beta3',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "valid_turns",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "valid_turns = {0, 0.5, 1, 1.5, 2, 2.5}\npositions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',\n    (EAST, RED, EAST, BLUE): 'beta2',\n    (SOUTH, RED, SOUTH, BLUE): 'beta3',\n    (WEST, RED, WEST, BLUE): 'beta4',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "positions_map",
    "kind": 5,
    "importPath": "utilities.json_validation_engine",
    "description": "utilities.json_validation_engine",
    "peekOfCode": "positions_map = {\n    (NORTH, RED, SOUTH, BLUE): 'alpha1',\n    (EAST, RED, WEST, BLUE): 'alpha2',\n    (SOUTH, RED, NORTH, BLUE): 'alpha3',\n    (WEST, RED, EAST, BLUE): 'alpha4',\n    (NORTH, RED, NORTH, BLUE): 'beta1',\n    (EAST, RED, EAST, BLUE): 'beta2',\n    (SOUTH, RED, SOUTH, BLUE): 'beta3',\n    (WEST, RED, WEST, BLUE): 'beta4',\n    (NORTH, RED, WEST, BLUE): 'gamma1',",
    "detail": "utilities.json_validation_engine",
    "documentation": {}
  },
  {
    "label": "JsonVariationsGenerator",
    "kind": 6,
    "importPath": "utilities.json_variations_generator",
    "description": "utilities.json_variations_generator",
    "peekOfCode": "class JsonVariationsGenerator:\n    def __init__(self) -> None:\n        self.location_mapping: Dict[Tuple[Location, Location], str] = {}\n        for start in [NORTH, SOUTH]:\n            for end in [EAST, WEST]:\n                self.location_mapping[(start, end)] = f\"{start}{end}\"\n    def calculate_location(\n        self, start_from objects.props Location, end_from objects.props Location\n    ) -> Location:\n        return self.location_mapping.get((start_location, end_location))",
    "detail": "utilities.json_variations_generator",
    "documentation": {}
  },
  {
    "label": "LayoutManager",
    "kind": 6,
    "importPath": "utilities.layout_manager",
    "description": "utilities.layout_manager",
    "peekOfCode": "class LayoutManager:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.layouts: Dict[str, QHBoxLayout | QVBoxLayout] = {}\n        self.init_layouts()\n        self.assign_layouts_to_window()\n        self.main_layout: QHBoxLayout = self.layouts[\"main\"]\n        self.left_layout: QVBoxLayout = self.layouts[\"right\"]\n        self.right_layout: QVBoxLayout = self.layouts[\"left\"]",
    "detail": "utilities.layout_manager",
    "documentation": {}
  },
  {
    "label": "LetterEngine",
    "kind": 6,
    "importPath": "utilities.letter_engine",
    "description": "utilities.letter_engine",
    "peekOfCode": "class LetterEngine:\n    def __init__(self, pictograph: 'Pictograph') -> None:\n        self.pictograph = pictograph\n        self.letters = pictograph.letters\n        self.preprocessed_start_end_combinations = self.preprocess_combinations()\n        self.parallel_combinations: Set[\n            Tuple[str, str, str, str]\n        ] = parallel_combinations\n        self.cached_parallel = None\n        self.cached_handpath = None",
    "detail": "utilities.letter_engine",
    "documentation": {}
  },

  {
    "label": "SvgResizer",
    "kind": 6,
    "importPath": "utilities.svg_resizer",
    "description": "utilities.svg_resizer",
    "peekOfCode": "class SvgResizer(QMainWindow):\n    '''\n    A class for resizing SVG files.\n    Attributes:\n        svg_file_paths (List[str]): The list of selected SVG file paths.\n    Methods:\n        __init__(): Initializes the SvgResizer class.\n        initUI(): Initializes the user interface.\n        select_svg_files(): Opens a file dialog to select SVG files.\n        load_thumbnails(svg_file_paths): Loads SVG thumbnails into the graphics view.",
    "detail": "utilities.svg_resizer",
    "documentation": {}
  },
  {
    "label": "app",
    "kind": 5,
    "importPath": "utilities.svg_resizer",
    "description": "utilities.svg_resizer",
    "peekOfCode": "app = QApplication(sys.argv)\nsvg_resizer = SvgResizer()\nsys.exit(app.exec())",
    "detail": "utilities.svg_resizer",
    "documentation": {}
  },
  {
    "label": "svg_resizer",
    "kind": 5,
    "importPath": "utilities.svg_resizer",
    "description": "utilities.svg_resizer",
    "peekOfCode": "svg_resizer = SvgResizer()\nsys.exit(app.exec())",
    "detail": "utilities.svg_resizer",
    "documentation": {}
  },
  {
    "label": "ArrowBox",
    "kind": 6,
    "importPath": "widgets.graph_editor.arrowbox.arrowbox",
    "description": "widgets.graph_editor.arrowbox.arrowbox",
    "peekOfCode": "class ArrowBox(QGraphicsScene):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.setSceneRect(0, 0, 750, 750)\n        self.setBackgroundBrush(Qt.GlobalColor.white)\n        self.view = ArrowBoxView(self)\n        self.populate_arrows()\n        self.grid = Grid(\"resources/images/grid/grid_simple.svg\")",
    "detail": "widgets.graph_editor.arrowbox.arrowbox",
    "documentation": {}
  },
  {
    "label": "ArrowBoxDrag",
    "kind": 6,
    "importPath": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "description": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "peekOfCode": "class ArrowBoxDrag(QWidget):\n    def __init__(\n        self, main_window: \"MainWindow\", pictograph: \"Pictograph\", arrowbox: \"ArrowBox\"\n    ) -> None:\n        super().__init__()\n        self.setParent(main_window)\n        self._setup_dependencies(main_window, pictograph, arrowbox)\n        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)\n        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)\n        self.preview = QLabel(self)",
    "detail": "widgets.graph_editor.arrowbox.arrowbox_drag",
    "documentation": {}
  },
  {
    "label": "ArrowBoxView",
    "kind": 6,
    "importPath": "widgets.graph_editor.arrowbox.arrowbox_view",
    "description": "widgets.graph_editor.arrowbox.arrowbox_view",
    "peekOfCode": "class ArrowBoxView(QGraphicsView):\n    def __init__(self, arrowbox: \"ArrowBox\") -> None:\n        super().__init__(arrowbox)\n        self.setFixedSize(\n            int(arrowbox.main_window.height() * 1 / 6),\n            int(arrowbox.main_window.height() * 1 / 6),\n        )\n        self.setScene(arrowbox)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)",
    "detail": "widgets.graph_editor.arrowbox.arrowbox_view",
    "documentation": {}
  },
  {
    "label": "AttrBox",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_box",
    "description": "widgets.graph_editor.attr_panel.attr_box",
    "peekOfCode": "class AttrBox(QFrame):\n    def __init__(\n        self, attr_panel: \"AttrPanel\", pictograph: \"Pictograph\", color: Color\n    ) -> None:\n        super().__init__(attr_panel)\n        self.attr_panel = attr_panel\n        self.pictograph = pictograph\n        self.color = color\n        self.turns_widget = None\n        self.pixmap_cache: Dict[str, QPixmap] = {}  # Initialize the pixmap cache",
    "detail": "widgets.graph_editor.attr_panel.attr_box",
    "documentation": {}
  },
  {
    "label": "HeaderWidget",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "peekOfCode": "class HeaderWidget(QWidget):\n    def __init__(self, attr_box: \"AttrBox\", color: Color) -> None:\n        super().__init__(attr_box)\n        self.attr_box = attr_box\n        self.color = color\n        self.arrow: Arrow = self.attr_box.pictograph.get_arrow_by_color(self.color)\n    def setup_header_widget(self):\n        layout = QHBoxLayout(self)\n        layout.setContentsMargins(0, 0, 0, 0)\n        layout.setSpacing(0)",
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "MotionTypeWidget",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "peekOfCode": "class MotionTypeWidget(QWidget):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.layout = QHBoxLayout(self)\n        self.motion_type = \"Pro\"\n        self.layout.setContentsMargins(0, 0, 0, 0)\n        self.layout.setSpacing(0)\n        self.typeLabel = QLabel(\"Type:\", self)\n        self.typeButton = QPushButton(self.motion_type, self)\n        self.typeButton.clicked.connect(self.toggle_motion_type)",
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "StartEndWidget",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "peekOfCode": "class StartEndWidget(QWidget):\n    def __init__(self, parent=None) -> None:\n        super().__init__(parent)\n        self.layout = QHBoxLayout(self)\n        self.layout.setContentsMargins(0, 0, 0, 0)\n        self.layout.setSpacing(0)\n        self.startLabel = QLabel(\"Start:\", self)\n        self.startComboBox = QComboBox(self)\n        self.startComboBox.addItems([\"N\", \"E\", \"S\", \"W\"])\n        self.swapButton = QPushButton(\"Swap\", self)",
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "TurnsWidget",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "description": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "peekOfCode": "class TurnsWidget(QWidget):\n    def __init__(\n        self, pictograph: \"Pictograph\", color: Color, attr_box: \"AttrBox\"\n    ) -> None:\n        super().__init__()\n        self.pictograph = pictograph\n        self.color = color\n        self.attr_box = attr_box\n        self.init_ui()\n    def init_ui(self) -> None:",
    "detail": "widgets.graph_editor.attr_panel.attr_box_widgets",
    "documentation": {}
  },
  {
    "label": "AttrPanel",
    "kind": 6,
    "importPath": "widgets.graph_editor.attr_panel.attr_panel",
    "description": "widgets.graph_editor.attr_panel.attr_panel",
    "peekOfCode": "class AttrPanel(QFrame):\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.pictograph = pictograph\n        self.setFixedHeight(self.pictograph.graph_editor.height())\n        self.setFixedWidth(int(self.height() / 2))\n        self.setContentsMargins(0, 0, 0, 0)\n        self.blue_attr_box = AttrBox(self, pictograph, BLUE)\n        self.red_attr_box = AttrBox(self, pictograph, RED)\n        self.setup_layouts()",
    "detail": "widgets.graph_editor.attr_panel.attr_panel",
    "documentation": {}
  },
  {
    "label": "ArrowPositioner",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "description": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "peekOfCode": "class ArrowPositioner:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.letters = pictograph.letters\n        self.pictograph = pictograph\n    def update(self) -> None:\n        for arrow in self.pictograph.arrows:\n            arrow.setTransformOriginPoint(0, 0)\n        optimal_locations = None\n        if len(self.pictograph.props) == 2:\n            if self.pictograph.current_letter:",
    "detail": "widgets.graph_editor.pictograph.position_engines.arrow_positioner",
    "documentation": {}
  },
  {
    "label": "PropPositioner",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "description": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "peekOfCode": "class PropPositioner:\n    current_state: List[MotionAttributesDicts]\n    matching_letters: List[LetterDictionary]\n    arrow_dict: List[MotionAttributesDicts]\n    letters: LetterDictionary\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.view = pictograph.view\n        self.letters = pictograph.letters\n    def update(self) -> None:",
    "detail": "widgets.graph_editor.pictograph.position_engines.prop_positioner",
    "documentation": {}
  },
  {
    "label": "PictographInit",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.pictogaph_init",
    "description": "widgets.graph_editor.pictograph.pictogaph_init",
    "peekOfCode": "class PictographInit:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.main_widget = pictograph.main_widget\n        self.window_width = pictograph.main_widget.main_window.main_window_width\n        self.window_height = pictograph.main_widget.main_window.main_window_height\n    def init_view(self) -> QGraphicsView:\n        view = PictographView(self.pictograph)\n        return view\n    def init_grid(self) -> Grid:",
    "detail": "widgets.graph_editor.pictograph.pictogaph_init",
    "documentation": {}
  },
  {
    "label": "Pictograph",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.pictograph",
    "description": "widgets.graph_editor.pictograph.pictograph",
    "peekOfCode": "class Pictograph(QGraphicsScene):\n    def __init__(self, main_widget: \"MainWidget\", graph_editor: \"GraphEditor\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.graph_editor = graph_editor\n        self.setup_scene()\n        self.setup_components(main_widget)\n    def setup_scene(self) -> None:\n        self.setSceneRect(0, 0, 750, 900)\n        self.setBackgroundBrush(Qt.GlobalColor.white)",
    "detail": "widgets.graph_editor.pictograph.pictograph",
    "documentation": {}
  },
  {
    "label": "PictographEventHandler",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "description": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "peekOfCode": "class PictographEventHandler:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def handle_mouse_press(self, event: \"QGraphicsSceneMouseEvent\") -> None:\n        scene_pos = event.scenePos()\n        items_at_pos = self.pictograph.items(scene_pos)\n        arrows_at_pos = [item for item in items_at_pos if isinstance(item, Arrow)]\n        closest_arrow = None\n        min_distance = float(\"inf\")\n        for arrow in arrows_at_pos:",
    "detail": "widgets.graph_editor.pictograph.pictograph_event_handler",
    "documentation": {}
  },
  {
    "label": "PictographMenuHandler",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "description": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "peekOfCode": "class PictographMenuHandler:\n    def __init__(self, main_widget: \"MainWidget\", pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.main_widget = main_widget\n        self.export_handler = main_widget.export_handler\n    def create_master_menu(self, event_pos: QPoint, clicked_item) -> None:\n        menu = QMenu()\n        arrow_menu = menu.addMenu(\"Arrow\")\n        self._add_arrow_actions(arrow_menu, clicked_item)\n        prop_menu = menu.addMenu(\"Prop\")",
    "detail": "widgets.graph_editor.pictograph.pictograph_menu_handler",
    "documentation": {}
  },
  {
    "label": "PictographView",
    "kind": 6,
    "importPath": "widgets.graph_editor.pictograph.pictograph_view",
    "description": "widgets.graph_editor.pictograph.pictograph_view",
    "peekOfCode": "class PictographView(QGraphicsView):\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.pictograph = pictograph\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setScene(self.pictograph)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.wheelEvent = lambda event: None\n        # Initialize buttons",
    "detail": "widgets.graph_editor.pictograph.pictograph_view",
    "documentation": {}
  },
  {
    "label": "PropBox",
    "kind": 6,
    "importPath": "widgets.graph_editor.propbox.propbox",
    "description": "widgets.graph_editor.propbox.propbox",
    "peekOfCode": "class PropBox(QGraphicsScene):\n    def __init__(self, main_widget: \"MainWidget\", pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.setSceneRect(0, 0, int(750), int(750))\n        self.setBackgroundBrush(Qt.GlobalColor.white)\n        self.view = PropBoxView(self)\n        self.pictograph = pictograph\n        self.grid = Grid(\"resources/images/grid/grid.svg\")",
    "detail": "widgets.graph_editor.propbox.propbox",
    "documentation": {}
  },
  {
    "label": "PropBoxDrag",
    "kind": 6,
    "importPath": "widgets.graph_editor.propbox.propbox_drag",
    "description": "widgets.graph_editor.propbox.propbox_drag",
    "peekOfCode": "class PropBoxDrag(QWidget):\n    def __init__(\n        self, main_window: \"MainWindow\", pictograph: \"Pictograph\", propbox: \"PropBox\"\n    ) -> None:\n        super().__init__(main_window)\n        self.setParent(main_window)\n        self._setup_dependencies(main_window, pictograph, propbox)\n        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)\n        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)\n        self.preview = QLabel(self)",
    "detail": "widgets.graph_editor.propbox.propbox_drag",
    "documentation": {}
  },
  {
    "label": "PropBoxView",
    "kind": 6,
    "importPath": "widgets.graph_editor.propbox.propbox_view",
    "description": "widgets.graph_editor.propbox.propbox_view",
    "peekOfCode": "class PropBoxView(QGraphicsView):\n    def __init__(self, propbox: \"PropBox\") -> None:\n        super().__init__()\n        self.setFixedSize(\n            int(propbox.main_window.height() * 1 / 6),\n            int(propbox.main_window.height() * 1 / 6),\n        )\n        self.setScene(propbox)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)",
    "detail": "widgets.graph_editor.propbox.propbox_view",
    "documentation": {}
  },
  {
    "label": "ActionButtonsFrame",
    "kind": 6,
    "importPath": "widgets.graph_editor.action_buttons_frame",
    "description": "widgets.graph_editor.action_buttons_frame",
    "peekOfCode": "class ActionButtonsFrame(QFrame):\n    \"\"\"\n    A frame that contains action buttons for manipulating arrows in the pictograph.\n    Args:\n        pictograph (Pictograph): The pictograph widget.\n        json_handler (JsonHandler): The JSON handler.\n    \"\"\"\n    def __init__(\n        self,\n        pictograph: \"Pictograph\",",
    "detail": "widgets.graph_editor.action_buttons_frame",
    "documentation": {}
  },
  {
    "label": "GraphEditor",
    "kind": 6,
    "importPath": "widgets.graph_editor.graph_editor",
    "description": "widgets.graph_editor.graph_editor",
    "peekOfCode": "class GraphEditor(QFrame):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.json_handler = main_widget.json_handler\n        self.setFrameStyle(QFrame.Shape.Box | QFrame.Shadow.Plain)\n        self.setLineWidth(1)\n        palette = self.palette()\n        palette.setColor(QPalette.ColorRole.WindowText, QColor(\"black\"))",
    "detail": "widgets.graph_editor.graph_editor",
    "documentation": {}
  },
  {
    "label": "KeyEventHandler",
    "kind": 6,
    "importPath": "widgets.graph_editor.key_event_handler",
    "description": "widgets.graph_editor.key_event_handler",
    "peekOfCode": "class KeyEventHandler:\n    \"\"\"\n    Handles key events for the graph editor.\n    Args:\n        event (QKeyEvent): The key event.\n        main_widget (MainWidget): The main widget.\n        pictograph (Pictograph): The graph board.\n    Returns:\n        None\n    \"\"\"",
    "detail": "widgets.graph_editor.key_event_handler",
    "documentation": {}
  },
  {
    "label": "VTGPanel",
    "kind": 6,
    "importPath": "widgets.graph_editor.vtg_panel",
    "description": "widgets.graph_editor.vtg_panel",
    "peekOfCode": "class VTGPanel(QFrame):\n    def __init__(self, pictograph: 'Pictograph') -> None:\n        super().__init__()\n        self.pictograph = pictograph\n        self.setup_info_panel()\n    def setup_info_panel(self) -> None:\n        # Create the vbox layout\n        layout = QVBoxLayout(self)\n        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)\n        # Create the top box",
    "detail": "widgets.graph_editor.vtg_panel",
    "documentation": {}
  },
  {
    "label": "VTGPanel",
    "kind": 6,
    "importPath": "widgets.graph_editor.vtg_panel",
    "description": "widgets.graph_editor.vtg_panel",
    "peekOfCode": "class VTGPanel(QFrame):\n    def __init__(self, pictograph: 'Pictograph') -> None:\n        super().__init__()\n        self.pictograph = pictograph\n        self.setup_info_panel()\n    def setup_info_panel(self) -> None:\n        # Create the vbox layout\n        layout = QVBoxLayout(self)\n        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)\n        # Create the top box",
    "detail": "widgets.graph_editor.vtg_panel",
    "documentation": {}
  },
  {
    "label": "LetterButtons",
    "kind": 6,
    "importPath": "widgets.option_picker.letter_buttons",
    "description": "widgets.option_picker.letter_buttons",
    "peekOfCode": "class LetterButtons(QFrame):\n    \"\"\"\n    A class representing a frame containing letter buttons.\n    Args:\n        main_window (MainWindow): The main window object.\n    Attributes:\n        main_window (MainWindow): The main window object.\n        letter_buttons_layout (QVBoxLayout): The layout for the letter buttons.\n    Methods:\n        __init__(self, main_window: MainWindow): Initializes the LetterButtons object.",
    "detail": "widgets.option_picker.letter_buttons",
    "documentation": {}
  },
  {
    "label": "OptionPicker",
    "kind": 6,
    "importPath": "widgets.option_picker.option_picker",
    "description": "widgets.option_picker.option_picker",
    "peekOfCode": "class OptionPicker(QFrame):\n    \"\"\"A class representing the OptionPicker widget.\n    The OptionPicker widget provides a user interface for selecting options from a scrollable area.\n    It consists of a scroll area and a frame containing buttons for each option.\n    Attributes:\n        main_widget (MainWidget): The main widget that contains the OptionPicker.\n        main_window (QWidget): The main window of the application.\n        main_layout (QHBoxLayout): The main layout of the OptionPicker widget.\n        scroll_area (OptionPickerScrollArea): The scroll area widget for displaying options.\n        button_frame (LetterButtons): The frame containing buttons for each option.",
    "detail": "widgets.option_picker.option_picker",
    "documentation": {}
  },
  {
    "label": "ScrollArea",
    "kind": 6,
    "importPath": "widgets.option_picker.scroll_area",
    "description": "widgets.option_picker.scroll_area",
    "peekOfCode": "class ScrollArea(QScrollArea):\n    \"\"\"\n    A custom scroll area widget for the option picker.\n    \"\"\"\n    def __init__(self, option_picker: \"OptionPicker\") -> None:\n        \"\"\"\n        Initialize the OptionPickerScrollArea.\n        Args:\n            option_picker (OptionPicker): The parent OptionPicker widget.\n        \"\"\"",
    "detail": "widgets.option_picker.scroll_area",
    "documentation": {}
  },
  {
    "label": "Sequence",
    "kind": 6,
    "importPath": "widgets.sequence.sequence",
    "description": "widgets.sequence.sequence",
    "peekOfCode": "class Sequence(QWidget):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.pictograph = main_widget.graph_editor.pictograph\n        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)\n        self.beat_frame = SequenceBeats(self.main_widget, self.pictograph, self)\n        self.button_frame = SequenceButtons(self.main_widget, self.pictograph, self)\n        self.layout = QVBoxLayout(self)\n        self.layout.setSpacing(0)",
    "detail": "widgets.sequence.sequence",
    "documentation": {}
  },
  {
    "label": "SequenceBeats",
    "kind": 6,
    "importPath": "widgets.sequence.sequence_beats",
    "description": "widgets.sequence.sequence_beats",
    "peekOfCode": "class SequenceBeats(QFrame):\n    def __init__(\n        self, main_widget: \"MainWidget\", pictograph: \"Pictograph\", sequence: \"Sequence\"\n    ) -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.pictograph = pictograph\n        self.sequence = sequence\n        self.beats: List[QGraphicsView] = []\n        self.layout = QGridLayout(self)",
    "detail": "widgets.sequence.sequence_beats",
    "documentation": {}
  },
  {
    "label": "SequenceButtons",
    "kind": 6,
    "importPath": "widgets.sequence.sequence_buttons",
    "description": "widgets.sequence.sequence_buttons",
    "peekOfCode": "class SequenceButtons(QFrame):\n    def __init__(\n        self, main_widget: \"MainWidget\", pictograph: \"Pictograph\", sequence: \"Sequence\"\n    ) -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.pictograph = pictograph\n        self.sequence = sequence\n        self.button_height = int(self.main_widget.height() * 1 / 20)\n        self.layout = QVBoxLayout(self)",
    "detail": "widgets.sequence.sequence_buttons",
    "documentation": {}
  },
  {
    "label": "MainWidget",
    "kind": 6,
    "importPath": "widgets.main_widget",
    "description": "widgets.main_widget",
    "peekOfCode": "class MainWidget(QWidget):\n    def __init__(self, main_window: \"MainWindow\") -> None:\n        super().__init__(main_window)\n        self.arrows = []\n        self.export_handler = None\n        self.main_window = main_window\n        self.resize(int(self.main_window.width()), int(self.main_window.height()))\n        self.key_event_handler = KeyEventHandler()\n        self.json_handler = JsonHandler()\n        self.letters: LetterDictionary = self.json_handler.load_all_letters()",
    "detail": "widgets.main_widget",
    "documentation": {}
  },
  {
    "label": "resize_svg",
    "kind": 2,
    "importPath": "fix_sizes",
    "description": "fix_sizes",
    "peekOfCode": "def resize_svg(file_path, output_size=(120, 120)) -> ElementTree:\n    # Parse the original SVG file\n    tree = ET.parse(file_path)\n    root = tree.getroot()\n    # Extract the width and height of the original SVG\n    original_width = int(root.get(\"width\", \"0\").replace(\"px\", \"\"))\n    original_height = int(root.get(\"height\", \"0\").replace(\"px\", \"\"))\n    # Calculate the new dimensions and offsets\n    new_width, new_height = output_size\n    x_offset = (new_width - original_width) / 2",
    "detail": "fix_sizes",
    "documentation": {}
  },
  {
    "label": "process_svgs",
    "kind": 2,
    "importPath": "fix_sizes",
    "description": "fix_sizes",
    "peekOfCode": "def process_svgs(directory) -> None:\n    for subdir, _, files in os.walk(directory):\n        for filename in files:\n            if filename.endswith(\".svg\"):\n                file_path = os.path.join(subdir, filename)\n                resized_svg = resize_svg(file_path)\n                resized_svg.write(file_path)  # Overwrites the original file\n# Directory containing SVG files (modify as needed)\ndirectory = \"resources/images/letters\"\nprocess_svgs(directory)",
    "detail": "fix_sizes",
    "documentation": {}
  },
  {
    "label": "directory",
    "kind": 5,
    "importPath": "fix_sizes",
    "description": "fix_sizes",
    "peekOfCode": "directory = \"resources/images/letters\"\nprocess_svgs(directory)",
    "detail": "fix_sizes",
    "documentation": {}
  },
  {
    "label": "MainWindow",
    "kind": 6,
    "importPath": "main",
    "description": "main",
    "peekOfCode": "class MainWindow(QMainWindow):\n    \"\"\"\n    The main window of the Sequence Constructor application.\n    Attributes:\n        graph_editor_layout (QHBoxLayout): The layout for the graph editor widget.\n        sequence_layout (QHBoxLayout): The layout for the sequence widget.\n        option_picker_layout (QHBoxLayout): The layout for the option picker widget.\n    \"\"\"\n    def __init__(self, profiler: cProfile.Profile) -> None:\n        \"\"\"",
    "detail": "main",
    "documentation": {}
  },
  {
    "label": "main",
    "kind": 2,
    "importPath": "main",
    "description": "main",
    "peekOfCode": "def main() -> None:\n    \"\"\"\n    The entry point of the application.\n    \"\"\"\n    profiler: cProfile.Profile = cProfile.Profile()\n    profiler.enable()\n    os.environ[\"QT_AUTO_SCREEN_SCALE_FACTOR\"] = \"1\"\n    app = QApplication(sys.argv)\n    main_window = MainWindow(profiler)\n    main_window.setFocus()",
    "detail": "main",
    "documentation": {}
  }
]
